name: app

on:
  push:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/app.yml'
  pull_request:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/app.yml'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          cache-dependency-path: ./app/yarn.lock
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Lint
        run: yarn lint

  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    needs: lint
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    outputs:
      published: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          cache-dependency-path: ./app/yarn.lock
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          working_directory: ./app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: release
    if: needs.release.outputs.published == 'true' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            build_command: build:linux
          - os: macos-latest
            build_command: build:mac
          - os: windows-latest
            build_command: build:win
    defaults:
      run:
        working-directory: ./app
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || 'HEAD' }}
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          cache-dependency-path: ./app/yarn.lock
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Build for ${{ matrix.os }}
        run: yarn ${{ matrix.build_command }}
        env:
          VITE_FIREBASE_API_KEY: '${{ secrets.VITE_FIREBASE_API_KEY }}'
          VITE_FIREBASE_AUTH_DOMAIN: '${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}'
          VITE_FIREBASE_PROJECT_ID: '${{ secrets.VITE_FIREBASE_PROJECT_ID }}'
          VITE_FIREBASE_STORAGE_BUCKET: '${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}'
          VITE_FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}'
          VITE_FIREBASE_APP_ID: '${{ secrets.VITE_FIREBASE_APP_ID }}'
          VITE_API_URL: '${{ secrets.VITE_API_URL }}'

      - name: Upload artifacts
        if: github.event_name != 'pull_request' && needs.release.outputs.published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: app-v${{ needs.release.outputs.version }}
          files: |
            ./app/dist/**/*.exe
            ./app/dist/**/*.dmg
            ./app/dist/**/*.AppImage
            ./app/dist/**/*.deb
            ./app/dist/**/*.rpm
            ./app/dist/**/*.zip
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts PR
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-builds
          path: |
            ./app/dist/**/*.exe
            ./app/dist/**/*.dmg
            ./app/dist/**/*.AppImage
            ./app/dist/**/*.deb
            ./app/dist/**/*.rpm
            ./app/dist/**/*.zip
          if-no-files-found: ignore
